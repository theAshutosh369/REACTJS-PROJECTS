* React ek open source library hai.

* Libraries provide developers with predefined functions and classes to make their work easier and boost the development process.

* Both libraries and frameworks are reusable code written by someone else. 

* A framework inverts the control of the program. It tells the developer what they need. A library doesnâ€™t

* facebook has developed react 

------------------- TUT 2 ( create project )

* npm - node package model. npm packages use karnyasathi pahila aplyala install karavch lagat. 
* npx - node package runner . npx packages install karaychi garaj nahiye. without install krta hi apn packages use kru shakto

* setup new project - 'npm init react-app myapp'. 
myapp (folder name) navach folder banel ani tyat sagle node modules and src file vagaire create hoil automatically.
* to run the app - 'npm start'

------------------- TUT 3 ( DOM n virtual DOM)

document - html document
object - elements like h1 , body , title tag
model - complete document 

virtual DOM - its a copy of current existing DOM

------------------- TUT 5 ( JSX )

* imr + enter - import React from 'react'
* clg         - console.log()
* rfce        - function component 
* rce         - class component 


* jsx - javascript XML


*  return (
    <div className="App">
      <h1>Ashutosh</h1>
    </div>
  );
* return function me jo html hai use hi jsx bolte hai

* creating function 
const func = function( )
{
  alert("hello ASH ! " )
}

*calling function in return function by clicking a button 
<button onClick={func}>greet </button>

* parameterized function
const func = function(a )
{
  alert("hello ASH ! your age is "+ a )
}

* calling parameterized function
<button onClick={ function(){ func(20000) } }>greet </button>

------------------- TUT 6 ( components and types )

* Always start component names with a capital letter.

* 2 types of components 1) functional and 2) class components

* functional component 
these are basic javascript functions 
ui design krna hai to functional components are best.

// into header.js file 
function Header()
{
    return <h1>hello functional components</h1>
}
export default Header;

// into app.js
import Header from './components/Header';
function App() {
  return (
    <div className="App">
    <Header/>
    </div>
  );
}
export default App;


* Class component 

// into cheader.js file 
import react from 'react'
class Cheader extends react.Component{
    render(){
        return <h1>Hello class components </h1>
    }
}

export default Cheader
// into App.js file 
import Cheader from './components/Cheader';
function App() {
  return (
    <div className="App">
    <Cheader></Cheader>
    </div>
  );
}
export default App;


------------------- TUT 9 ( Props )


* props in functional component
// into header.js
function Header(p)
{
    return <h1>hello {p.name}-{p.last}</h1>
}
export default Header;

// into app.js
import Header from './components/Header';
function App() {
  return (
    <div className="App">
    <Header name="ashutosh" last="birajdar"/>
    </div>
  );
}
export default App;

* the p as a parameter given to the function is called props ( properties )
* name and last are propeties of that header component 
* functional components ko bheja jata hai props from another components
* we cant change value of props in component 


* props in class component
// into Cheader.js
import react from 'react'
class Cheader extends react.Component{
    render(){
        return <h1>Hello {this.props.name}- {this.props.last} </h1>
    }
}
export default Cheader

// into app.js
import Cheader from './components/Cheader';
function App() {
  return (
    <div className="App">
    <Cheader name='Arjun' last='kourav'/>
    </div>
  );
}
export default App;


------------------- TUT 11 ( state )

* states are managed in the component. state can be changed 
* useState hook - functional component 
* this.state - class component 

* Props are immutable i.e. once set the props cannot be changed, while State is an observable object that is to be used to hold data that may change over time and to control the behavior after each change.


------------------- TUT 12 (Hooks)

* Hooks can only be called inside React function components.
Hooks can only be called at the top level of a component.
Hooks cannot be conditional

* useState hook 
import {useState} from 'react';
function App() {

  const [color , setColor]  = useState('red')
  return (
    <div className="App">
       <h1>color is {color}</h1>
       <button onClick={function(){ setColor('blue') }}> change </button>
    </div>
  );
}
export default App;



* Changing the value of title according to input 

import {useState} from 'react'
import './Expense.css'
export default function Expense(props) {
    const [title , setTitle] = useState(props.title)
    const [newTitle , setNewTitle] = useState('')

    function changeHandler( event )
    {
        setNewTitle(event.target.value)
    }

    function clickHandler( )
    {
        setTitle(newTitle)
    }

  return (
    <div>
        <h3>
        <input type="text" value={newTitle} onChange={changeHandler} />
        <button onClick={clickHandler}> change title </button>
        </h3>
    </div>
  )
}

------------------- TUT 15 (frangment)

* Frangment is used to group the list of elements without creating an extra div

* just import the fragment component from react and use <Fragment> </Fragment> tag instead of the extra div tag

import {Fragment} from 'react'
function App() {
  return(
    <Fragment>
       <h1>color</h1>
       <button onClick={change}> nothing </button>
    </Fragment>
  );
}

OR 

function App() {
  return(
    <>
       <h1>color</h1>
       <button onClick={change}> nothing </button>
    </>
  );
}
* this will also work without using Frangment component 


------------------- TUT 16 ( Lists )


function App() {
  const list = [1,2,3,4,5,6]
  const nn = list.map( function(l){
    return <h1>{l}</h1>
  })

  return(
    <>
       <h1>{nn}</h1>
    </>
      
  );
}


------------------- TUT 17 ( styling css using react )

* EXTERNAL CSS 

// into style.css 
.demo{
    color : white;
}
.clr{
    font-size: 150px;
}
.bg{
    background-color: black;
}


// into Stylesheet.js 
import './Style.css'
const Stylesheet = (p) => {
    const cls = p.cls
    return ( 
        <div className={`${cls} clr bg`}>
            hello stylesheet 
        </div>
    );
}
export default Stylesheet;

// into app.js 
import Stylesheet from './components/Stylesheet'
function App() {
  return(
   <div>
      <Stylesheet cls="demo"/>
   </div>
  );
}
export default App;


* INLINE CSS 

//into inline.js
function Inline() {
    const css ={
        color:'blue',
        fontSize:'138px'
    }
  return (
    <div style={css}>hello inline css</div>
  )
}
export default Inline

// into app.js
import Inline from './components/Inline'
function App() {
  return(
   <div>
      <Inline/>
   </div>
  );
}
export default App;


------------------- TUT 23 ( routing in react )

* first install a dependency in working folder obviously
'npm i react-router-dom@5'
OR
'npm install react-router-dom localforage match-sorter sort-by'
.json file me dependency me react router dom aya hoga


* visit 'react router' website 

in index.js
* import {BrowserRouter} from 'react-router-dom' 
* replace <React.StrictMode> with <BrowserRouter>


in Header.js
* import {Link} from 'react-router-dom' 

<Link className='nav-link active' to='/'> Home </Link>
<Link className='nav-link active' to='/About'> About </Link>
<Link className='nav-link active' to='/Contact'> Contact </Link>

in App.js 
* import { Routes , Route } from 'react-router-dom';
* in return() 
<Routes>
  <Route path="/" element={ <Home/> } />
  <Route path="Contact" element={ <Contact/> } />
  <Route path="About" element={ <About/> } />
</Routes>

------------------- TUT 25 ( Api fetch )


  fetch('paste url here').then( res=>res.json ).then(data=>{ console.log(data) })


------------------- TUT 26 ( bootstrap with react )

to add bootstrap in react add
in index.html file of public folder add bootstrap css link in head section
in same file add bootstrap js link at the end of body section 

2 folders banane hai src me ek components and dusra hoga pages 



   










